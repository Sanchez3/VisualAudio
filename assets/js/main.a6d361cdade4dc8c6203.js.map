{"version":3,"sources":["webpack:///./src/assets/js/main.js"],"names":["__webpack_require__","r","__webpack_exports__","dat_gui__WEBPACK_IMPORTED_MODULE_0__","audioLoaded","window","h5","FizzyText","drawBar","drawWave","barColor","waveColor","play","document","getElementById","pause","initGUI","that","this","gui","f1","addFolder","setChecked","prop","n","add","listen","onChange","addColor","f2","initAudioCanvas","audioCtx","AudioContext","webkitAudioContext","e","alert","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","audio","addEventListener","removeEventListener","createMediaElementSource","connect","destination","app","PIXI","Application","width","height","appendChild","view","w","h","graphics","Graphics","basicText","Text","fill","x","y","stage","addChild","clear","ticker","Ticker","stop","deltaTime","getByteTimeDomainData","sliceWidth","beginFill","lineStyle","i","moveTo","lineTo","endFill","getByteFrequencyData","barHeight","barWidth","drawRect","start","isPc","userAgentInfo","navigator","userAgent","Agents","Array","flag","v","length","indexOf","rootResize","wFsize","wWidth","screen","innerWidth","wHeight","innerHeight","getElementsByTagName","style","fontSize","eventInit","passive","preventDefault","cssInit","interval","timeout","end","lastInnerWidth","lastInnerHeight","noChangeCount","clearInterval","clearTimeout","setInterval","setTimeout","init","onload"],"mappings":"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","file":"assets/js/main.a6d361cdade4dc8c6203.js","sourcesContent":["/**\n * Created by sanchez \n */\n'use strict';\n\n//check the environment\n// if (process.env.NODE_ENV !== 'production') {\n//     console.log('Looks like we are in development mode!');\n// }\nimport * as dat from 'dat.gui';\n// import CSS\n\nimport css from '../css/css.css';\n\n\n//ES6 Module\nimport 'pixi.js';\n// import * as Tone from 'tone';\n\n\n// var player = new Tone.Player({\n//     \"url\": \"/assets/media/bgm1.mp3\",\n//     \"loop\": true\n// }).toMaster();\n\n// var fft = new Tone.Analyser('fft', 64);\n// player.fan(fft);\n// var fftArray = fft.getValue()\nvar audioLoaded = false;\nwindow.h5 = {\n    FizzyText: {\n        drawBar: false,\n        drawWave: true,\n        barColor: 0xFFFFFF,\n        waveColor: 0xFFFFFF,\n        play: function() {\n            var audio = document.getElementById('audio');\n            audio.play();\n\n            //tone.js\n            // player.load('/assets/media/bgm1.mp3',function(){\n            //     player.start();\n            //     audioLoaded=true\n            // })\n        },\n        pause: function() {\n            var audio = document.getElementById('audio');\n            audio.pause();\n        }\n    },\n    initGUI: function() {\n        var that = this;\n        var gui = new dat.GUI();\n        var f1 = gui.addFolder('SineWave');\n\n        function setChecked(prop) {\n            var n = that.FizzyText[prop];\n            if (n) {\n                that.FizzyText['drawBar'] = false;\n                that.FizzyText['drawWave'] = false;\n            }\n            that.FizzyText[prop] = n;\n        }\n        f1.add(that.FizzyText, 'drawWave').listen().onChange(function() {\n            setChecked('drawWave')\n        });\n        f1.addColor(that.FizzyText, 'waveColor');\n\n        var f2 = gui.addFolder('Frequency Bar')\n        f2.add(that.FizzyText, 'drawBar').listen().onChange(function() {\n            setChecked('drawBar')\n        });;\n        f2.addColor(that.FizzyText, 'barColor');\n\n        gui.add(that.FizzyText, 'play');\n        gui.add(that.FizzyText, 'pause');\n\n    },\n    initAudioCanvas: function() {\n        var that = this;\n        try {\n            var audioCtx = new(window.AudioContext || window.webkitAudioContext)();\n        } catch (e) {\n            alert('Your browser does not support AudioContext!');\n            console.log(e);\n        }\n\n\n\n        var source;\n\n\n        var analyser = audioCtx.createAnalyser();\n        // analyser.connect(audioCtx.destination);\n        //确定频域的FFT的大小\n        analyser.fftSize = 2048;\n        //fftSize一半，用于可视化的数据量的数量\n        var bufferLength = analyser.frequencyBinCount;\n        //创建无符号字节数组\n        var dataArray = new Uint8Array(bufferLength);\n        var audio = document.getElementById('audio');\n        // source = audioCtx.createMediaElementSource(audio);\n        // source.connect(analyser);\n\n        audio.addEventListener('canplaythrough', function() {\n            audio.removeEventListener('canplaythrough', this);\n            source = audioCtx.createMediaElementSource(audio);\n            source.connect(analyser);\n            analyser.connect(audioCtx.destination);\n            audioLoaded = true;\n        })\n\n\n\n        //当前频域数据\n        // analyser.getByteFrequencyData(dataArray)\n\n        //将当前波形，或者时域数据拷贝\n        // analyser.getByteTimeDomainData(dataArray);\n\n        //Create a Pixi Application\n        var app = new PIXI.Application({ width: 800, height: 600 });\n        //Add the canvas that Pixi automatically created for you to the HTML document\n        document.getElementById('canvas-wrapper').appendChild(app.view);\n        var w = 800;\n        var h = 600;\n        var graphics = new PIXI.Graphics();\n\n        var basicText = new PIXI.Text('Note: Chrome only for now, Mobile bug!!!',{fill:'#FFF'});\n        basicText.x = 10;\n        basicText.y = 10;\n\n        app.stage.addChild(basicText);\n\n\n        graphics.clear();\n\n        app.stage.addChild(graphics);\n\n        function drawBar() {\n            if (!audioLoaded) return;\n            //tone.js\n            // var fftValues = fft.getValue ();\n\n            //get frequency data and put it into the array created above\n            analyser.getByteFrequencyData(dataArray);\n            // console.log(dataArray)\n            graphics.clear();\n            graphics.beginFill(that.FizzyText.barColor);\n\n            var barWidth = (w / bufferLength) * 10;\n            var barHeight;\n            var x = 0;\n\n            for (var i = 0; i < bufferLength; i++) {\n                //tone.js\n                // barHeight = fftValues[i]/255 * h;\n                barHeight = dataArray[i];\n                graphics.drawRect(x, h / 2 - barHeight / 2, barWidth, barHeight / 2);\n\n                x += barWidth + 1;\n            }\n\n        }\n\n        function drawWave() {\n            //get waveform data and put it into the array created above\n            analyser.getByteTimeDomainData(dataArray);\n            graphics.clear();\n            var sliceWidth = w * 1.0 / bufferLength;\n            var x = 0;\n            graphics.beginFill();\n            graphics.lineStyle(2, that.FizzyText.waveColor, 1);\n            // console.log(dataArray)\n            for (var i = 0; i < bufferLength; i++) {\n                var v = dataArray[i] / 128.0;\n                var y = v * h / 2;\n\n                if (i === 0) {\n                    // graphics.clear();\n                    graphics.moveTo(x, y);\n                } else {\n                    graphics.lineTo(x, y);\n                }\n                x += sliceWidth;\n            }\n            graphics.lineTo(w, h / 2);\n            graphics.endFill();\n        }\n\n        var ticker = new PIXI.ticker.Ticker();\n        ticker.stop();\n        ticker.add((deltaTime) => {\n\n            if (that.FizzyText.drawWave) {\n                drawWave();\n                return;\n            }\n            if (that.FizzyText.drawBar) {\n                drawBar();\n                return;\n            }\n        });\n        ticker.start();\n        // audio.play();\n        audio.addEventListener('play', function() {\n            console.log('play');\n            ticker.start();\n        })\n        audio.addEventListener('pause', function() {\n            console.log('pause');\n            // ticker.stop();\n        })\n\n    },\n    isPc: function() {\n        var userAgentInfo = navigator.userAgent;\n        var Agents = new Array('Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod');\n        var flag = true;\n        for (var v = 0; v < Agents.length; v++) {\n            if (userAgentInfo.indexOf(Agents[v]) > 0) { flag = false; break; }\n        }\n        return flag;\n    },\n    rootResize: function() {\n        var wFsize;\n\n        //iphone6/6s/7/8 orientation=portrait screen.width=750px screen.height=1334px / WeChat window.innerWidth=750px window.innerHeight=1206px \n        var wWidth = (window.screen.width > 0) ? (window.innerWidth >= window.screen.width || window.innerWidth == 0) ? screen.width :\n            window.innerWidth : window.innerWidth;\n        var wHeight = (window.screen.height > 0) ? (window.innerHeight >= window.screen.height || window.innerHeight == 0) ?\n            window.screen.height : window.innerHeight : window.innerHeight;\n        // var wWidth = window.innerWidth;\n        // var wHeight = window.innerHeight;\n\n        if (wWidth > wHeight) {\n            wFsize = wHeight / 750 * 100;\n        } else {\n            wFsize = wWidth / 750 * 100;\n        }\n        document.getElementsByTagName('html')[0].style.fontSize = wFsize + 'px';\n    },\n    eventInit: function() {\n        var that = this;\n        document.addEventListener('touchstart', function(e) {}, { passive: false });\n        document.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        }, { passive: false });\n        return that;\n    },\n    cssInit: function() {\n        var that = this;\n        var noChangeCountToEnd = 100,\n            noEndTimeout = 1000;\n        that.rootResize();\n        window.addEventListener('onorientationchange' in window ? 'orientationchange' : 'resize', function() {\n            var interval,\n                timeout,\n                end,\n                lastInnerWidth,\n                lastInnerHeight,\n                noChangeCount;\n            end = function() {\n                // \"orientationchangeend\"\n                clearInterval(interval);\n                clearTimeout(timeout);\n                interval = null;\n                timeout = null;\n                that.rootResize();\n            };\n            interval = setInterval(function() {\n                if (window.innerWidth === lastInnerWidth && window.innerHeight === lastInnerHeight) {\n                    noChangeCount++;\n                    if (noChangeCount === noChangeCountToEnd) {\n                        // The interval resolved the issue first.\n                        end();\n                    }\n                } else {\n                    lastInnerWidth = window.innerWidth;\n                    lastInnerHeight = window.innerHeight;\n                    noChangeCount = 0;\n                }\n            });\n            timeout = setTimeout(function() {\n                // The timeout happened first.\n                end();\n            }, noEndTimeout);\n        });\n\n        return that;\n    },\n    init: function() {\n        var that = this;\n        that.cssInit().eventInit();\n        that.initGUI()\n        that.initAudioCanvas();\n    }\n};\nwindow.onload = function() {\n    window.h5.init();\n};\n\n//Stats JavaScript Performance Monitor\n\n//import Stats from 'stats.js';\n//showStats();\n// function showStats() {\n//     var stats = new Stats();\n//     stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n//     var fs = document.createElement('div');\n//     fs.style.position = 'absolute';\n//     fs.style.left = 0;\n//     fs.style.top = 0;\n//     fs.style.zIndex = 999;\n//     fs.appendChild(stats.domElement);\n//     document.body.appendChild(fs);\n\n//     function animate() {\n//         stats.begin();\n//         // monitored code goes here\n//         stats.end();\n//         requestAnimationFrame(animate);\n//     }\n//     requestAnimationFrame(animate);\n// }"],"sourceRoot":""}